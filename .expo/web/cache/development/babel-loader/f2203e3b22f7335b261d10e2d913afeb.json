{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid number!\", \"Number has to be a number between 1 and 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      maxLength: 2,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      onChangeText: numberInputHandler,\n      value: enteredNumber\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: resetInputHandler,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: confirmInputHandler,\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 100,\n    marginHorizontal: 24,\n    padding: 16,\n    backgroundColor: \"#3b021f\",\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.25\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: \"#ddb52f\",\n    borderBottomWidth: 2,\n    color: \"#ddb52f\",\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","PrimaryButton","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","inputContainer","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","justifyContent","alignItems","marginTop","marginHorizontal","padding","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","fontSize","borderBottomColor","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection","flex"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/RN_GUESSING_GAME/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from \"react\";\nimport { TextInput, View, StyleSheet, Alert } from \"react-native\";\n\nimport PrimaryButton from \"../components/PrimaryButton\";\n\nfunction StartGameScreen({ onPickNumber }) {\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  function confirmInputHandler() {\n    const chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid number!\",\n        \"Number has to be a number between 1 and 99.\",\n        [{ text: \"Okay\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  return (\n    <View style={styles.inputContainer}>\n      <TextInput\n        style={styles.numberInput}\n        maxLength={2}\n        keyboardType=\"number-pad\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n        onChangeText={numberInputHandler}\n        value={enteredNumber}\n      />\n      <View style={styles.buttonsContainer}>\n        <View style={styles.buttonContainer}>\n          <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n        </View>\n        <View style={styles.buttonContainer}>\n          <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nexport default StartGameScreen;\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 100,\n    marginHorizontal: 24,\n    padding: 16,\n    backgroundColor: \"#3b021f\",\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 6,\n    shadowOpacity: 0.25,\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: \"#ddb52f\",\n    borderBottomWidth: 2,\n    color: \"#ddb52f\",\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;AAGA,OAAOC,aAAP;;;;AAEA,SAASC,eAAT,OAA2C;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;;EACzC,gBAA0CH,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOI,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;IACvCF,gBAAgB,CAACE,WAAD,CAAhB;EACD;;EAED,SAASC,iBAAT,GAA6B;IAC3BH,gBAAgB,CAAC,EAAD,CAAhB;EACD;;EAED,SAASI,mBAAT,GAA+B;IAC7B,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAD,CAA7B;;IAEA,IAAIQ,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAI,CAAvC,IAA4CA,YAAY,GAAG,EAA/D,EAAmE;MACjEG,KAAK,CAACC,KAAN,CACE,iBADF,EAEE,6CAFF,EAGE,CAAC;QAAEC,IAAI,EAAE,MAAR;QAAgBC,KAAK,EAAE,aAAvB;QAAsCC,OAAO,EAAET;MAA/C,CAAD,CAHF;MAKA;IACD;;IAEDL,YAAY,CAACO,YAAD,CAAZ;EACD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAEQ,MAAM,CAACC,cAApB;IAAA,WACE,KAAC,SAAD;MACE,KAAK,EAAED,MAAM,CAACE,WADhB;MAEE,SAAS,EAAE,CAFb;MAGE,YAAY,EAAC,YAHf;MAIE,cAAc,EAAC,MAJjB;MAKE,WAAW,EAAE,KALf;MAME,YAAY,EAAEd,kBANhB;MAOE,KAAK,EAAEF;IAPT,EADF,EAUE,MAAC,IAAD;MAAM,KAAK,EAAEc,MAAM,CAACG,gBAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;QAAA,UACE,KAAC,aAAD;UAAe,OAAO,EAAEd,iBAAxB;UAAA;QAAA;MADF,EADF,EAIE,KAAC,IAAD;QAAM,KAAK,EAAEU,MAAM,CAACI,eAApB;QAAA,UACE,KAAC,aAAD;UAAe,OAAO,EAAEb,mBAAxB;UAAA;QAAA;MADF,EAJF;IAAA,EAVF;EAAA,EADF;AAqBD;;AAED,eAAeP,eAAf;AAEA,IAAMgB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,cAAc,EAAE;IACdM,cAAc,EAAE,QADF;IAEdC,UAAU,EAAE,QAFE;IAGdC,SAAS,EAAE,GAHG;IAIdC,gBAAgB,EAAE,EAJJ;IAKdC,OAAO,EAAE,EALK;IAMdC,eAAe,EAAE,SANH;IAOdC,YAAY,EAAE,CAPA;IAQdC,SAAS,EAAE,CARG;IASdC,WAAW,EAAE,OATC;IAUdC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CAVA;IAWdC,YAAY,EAAE,CAXA;IAYdC,aAAa,EAAE;EAZD,CADe;EAe/BlB,WAAW,EAAE;IACXgB,MAAM,EAAE,EADG;IAEXD,KAAK,EAAE,EAFI;IAGXI,QAAQ,EAAE,EAHC;IAIXC,iBAAiB,EAAE,SAJR;IAKXC,iBAAiB,EAAE,CALR;IAMXC,KAAK,EAAE,SANI;IAOXC,cAAc,EAAE,CAPL;IAQXC,UAAU,EAAE,MARD;IASXC,SAAS,EAAE;EATA,CAfkB;EA0B/BxB,gBAAgB,EAAE;IAChByB,aAAa,EAAE;EADC,CA1Ba;EA6B/BxB,eAAe,EAAE;IACfyB,IAAI,EAAE;EADS;AA7Bc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}