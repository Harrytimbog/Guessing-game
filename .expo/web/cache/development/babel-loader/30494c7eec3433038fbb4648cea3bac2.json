{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nvar GameScreen = function GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver();\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect;\n\n  function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < userNumber || direction === \"greater\" && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [{\n        text: \"Sorry!\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.instructionText,\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(_this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(_this, \"greater\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","useEffect","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","styles","screen","instructionText","buttonsContainer","buttonContainer","bind","StyleSheet","create","flex","padding","marginBottom","flexDirection"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/RN_GUESSING_GAME/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Alert } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nlet minBoundary = 1;\nlet maxBoundary = 100;\n\nconst GameScreen = ({ userNumber, onGameOver }) => {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n\n  useEffect(() => {\n    if (currentGuess === userNumber) {\n      onGameOver();\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  useEffect;\n\n  function nextGuessHandler(direction) {\n    if (\n      (direction === \"lower\" && currentGuess < userNumber) ||\n      (direction === \"greater\" && currentGuess > userNumber)\n    ) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [\n        { text: \"Sorry!\", style: \"cancel\" },\n      ]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n    const newRndNumber = generateRandomBetween(\n      minBoundary,\n      maxBoundary,\n      currentGuess\n    );\n    setCurrentGuess(newRndNumber);\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponent's Guess</Title>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card>\n        <InstructionText style={styles.instructionText}>\n          Higher or lower?\n        </InstructionText>\n        <View style={styles.buttonsContainer}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n        </View>\n      </Card>\n      {/* <View>LOG ROUNDS</View> */}\n    </View>\n  );\n};\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n  instructionText: {\n    marginBottom: 12,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}