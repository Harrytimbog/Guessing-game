{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar GameScreen = function GameScreen(_ref) {\n  var userNumber = _ref.userNumber;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Higher or lower?\"\n      }), _jsx(PrimaryButton, {})]\n    })]\n  });\n};\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"names":["useState","NumberContainer","PrimaryButton","Title","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","GameScreen","userNumber","initialGuess","currentGuess","setCurrentGuess","styles","screen","StyleSheet","create","flex","padding"],"sources":["/home/harrytimbog/code/Harrytimbog/react-native/RN_GUESSING_GAME/screens/GameScreen.js"],"sourcesContent":["import { useState } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nconst GameScreen = ({ userNumber }) => {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponent's Guess</Title>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <View>\n        <Text>Higher or lower?</Text>\n        <PrimaryButton></PrimaryButton>\n      </View>\n      {/* <View>LOG ROUNDS</View> */}\n    </View>\n  );\n};\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;;;;AAEA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,OAAzC,EAAkD;EAChD,IAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAzD;;EAEA,IAAIG,MAAM,KAAKD,OAAf,EAAwB;IACtB,OAAOH,qBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,CAA5B;EACD,CAFD,MAEO;IACL,OAAOC,MAAP;EACD;AACF;;AAED,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;EACrC,IAAMC,YAAY,GAAGV,qBAAqB,CAAC,CAAD,EAAI,GAAJ,EAASS,UAAT,CAA1C;;EACA,gBAAwCb,QAAQ,CAACc,YAAD,CAAhD;EAAA;EAAA,IAAOC,YAAP;EAAA,IAAqBC,eAArB;;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,MAApB;IAAA,WACE,KAAC,KAAD;MAAA;IAAA,EADF,EAEE,KAAC,eAAD;MAAA,UAAkBH;IAAlB,EAFF,EAGE,MAAC,IAAD;MAAA,WACE,KAAC,IAAD;QAAA;MAAA,EADF,EAEE,KAAC,aAAD,KAFF;IAAA,EAHF;EAAA,EADF;AAWD,CAfD;;AAiBA,eAAeH,UAAf;AAEA,IAAMK,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,MAAM,EAAE;IACNG,IAAI,EAAE,CADA;IAENC,OAAO,EAAE;EAFH;AADuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}